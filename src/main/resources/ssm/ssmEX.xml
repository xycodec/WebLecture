<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

<!--    开启注解扫描,希望处理service与dao,controller层不需要spring去处理(这是springmvc的活儿)-->
    <context:component-scan base-package="com.xycode.springLecture.ssmEX">

<!--        exclude-filter type="annotation", 配置哪些注解不扫描,这里就是排除springmvc的注解: @Controller -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

<!--    notice: spring整合mybatis框架,把mybatis的相关类对象交给spring IOC容器来管理,配置完以后,mybatis的配置文件就没必要存在了-->
<!--    配置数据源-->
    <context:property-placeholder location="classpath:druid.properties" system-properties-mode="FALLBACK"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${driverClassName}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${password}"/>
    </bean>

<!--    配置sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
    </bean>

<!--    配置Dao所在的包位置,功能相当于<mappers>的<package>标签-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.xycode.springLecture.ssmEX.dao"/>
    </bean>
</beans>